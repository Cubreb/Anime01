name: Build and Deploy Apps

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [closed]

env:
  INCREMENT_SCRIPT_PATH: './actions-tool/increment_version.sh'

  IOS_SCHEME: 'Anime Now! (iOS)'
  IOS_ARCHIVE_PATH: '/tmp/action-builds/Anime Now! (iOS).xcarchive'
  IOS_OUTPUT_PATH: '/tmp/action-builds/Anime Now! (iOS).ipa'

#  MACOS_SCHEME_NAME: 'Anime Now! (macOS)'
#  MACOS_ARCHIVE_PATH: '/tmp/action-builds/Anime Now! (macOS).xcarchive'
#  MACOS_OUTPUT_PATH: '/tmp/action-builds/Anime Now! (macOS).app'

jobs:
  build-and-deploy:
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Determine if beta or release
        run: |
          [[ ${{ github.event.pull_request != null }} == true ]] && [[ ${{ github.event.pull_request.user.login == github.repository.owner.login }} == true ]] && echo "is_release=1" >> $GITHUB_ENV || echo "is_release=0" >> $GITHUB_ENV

      - name: Get latest commit id
        run: |
          echo "latest_commit_build=$(git log --format="%h" -n 1)" >> $GITHUB_ENV

      - name: Get ios marketing version
        run: |
          echo "ios_marketing_version=$(xcodebuild -showBuildSettings -scheme '${{ env.IOS_SCHEME }}'  | grep 'MARKETING_VERSION' | cut -f 7 -d ' ')" >> $GITHUB_ENV

      - name: Bump iOS beta marketing version
        id: bump_version
        if: ${{ env.is_release == 0 }}
        run: |
          sudo chmod 777 $INCREMENT_SCRIPT_PATH
          echo "ios_marketing_version=$($INCREMENT_SCRIPT_PATH ${{ env.ios_marketing_version }} feature)" >> $GITHUB_ENV

      - name: Set Release Info
        if: ${{ env.is_release == 1 }}
        run: |
          echo "message_title=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
          echo "message_body=${{ github.event.pull_request.body }}" >> $GITHUB_ENV
          echo "version=${{ env.ios_marketing_version }}" >> $GITHUB_ENV
          echo "tag_version=v${{ env.ios_marketing_version }}" >> $GITHUB_ENV

      - name: Set Beta Info
        if: ${{ env.is_release == 0 }}
        run: |
          echo "message_title=v${{ env.ios_marketing_version }}-beta" >> $GITHUB_ENV
          echo "message_body='It is not ready for daily use and we do not guarantee its usability.'" >> $GITHUB_ENV
          echo "version=${{ env.ios_marketing_version }}" >> $GITHUB_EN
          echo "tag_version=v${{ env.ios_marketing_version }}_b${{ env.latest_commit_build }}" >> $GITHUB_ENV

      - name: Build IOS Archive
        run: xcodebuild archive -destination 'generic/platform=iOS' -scheme '${{ env.IOS_SCHEME }}' -archivePath '${{ env.IOS_ARCHIVE_PATH }}' MARKETING_VERSION='${{ env.tag_version }}' CURRENT_PROJECT_VERSION='${{ env.latest_commit_build }}'  CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO CODE_SIGN_IDENTITY= CODE_SIGN_ENTITLEMENTS= GCC_OPTIMIZATION_LEVEL=s SWIFT_OPTIMIZATION_LEVEL=-O

      - name: Build IPA
        run: |
          zip -r '${{ env.IOS_OUTPUT_PATH }}' '${{ env.IOS_ARCHIVE_PATH }}/Products/Applications'

      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        with:
         fail_on_unmatched_files: true
         files: ${{ env.IPA_OUTPUT_PATH }}
         token: ${{ secrets.GITHUB_TOKEN }}
         generate_release_notes: ${{ env.is_release == 0 }}
         prerelease: ${{ env.is_release == 0 }}
         body: ${{ env.message_body }}
         name: ${{ env.message_title }}
         tag_name: '${{ env.tag_version }}'

      - name: Commit bump version
        run: |
          git add .
          git commit -m "Bump version"
          git push origin HEAD
